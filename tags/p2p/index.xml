<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>p2p on Nikita Galaiko</title><link>https://galaiko.rocks/tags/p2p/</link><description>Recent content in p2p on Nikita Galaiko</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 20 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://galaiko.rocks/tags/p2p/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry Pi: K8s cluster</title><link>https://galaiko.rocks/posts/blog/raspberry-k8s/</link><pubDate>Mon, 24 Jun 2019 21:28:26 +0200</pubDate><guid>https://galaiko.rocks/posts/blog/raspberry-k8s/</guid><description>I spent too much time configuring Kubernetes cluster on Raspberry Pi today, so here are notes for my future self on how to do that:
SD card Download operation system.
I am using HypriotOS v1.10.0 It is based on Raspbian Buster Lite, has a preinstalled docker and some other minor things to simplify cluster setup:
$ uname -a Linux node-red 4.14.98-v7+ #1200 SMP Tue Feb 12 20:27:48 GMT 2019 armv7l GNU/Linux $ docker version Client: Version: 18.</description></item><item><title>Words Count</title><link>https://galaiko.rocks/posts/blog/words-count/</link><pubDate>Sat, 11 May 2019 11:01:45 +0200</pubDate><guid>https://galaiko.rocks/posts/blog/words-count/</guid><description>Last week I participated in a small competiotion at work. The goal was to calculate the top 10 the most common words in a file and print them with number of occurences. For testing we used export from HackerNews comments from 2012 until today, and that file was 4GB.
I will describe what optimizations I used to solve the problem from the most to the least obvious.
Solution was measured on MacBook Pro 2018 with 2,2 GHz Intel Core i7 CPU and 32 GB RAM.</description></item><item><title>Forced wrapper interface</title><link>https://galaiko.rocks/posts/blog/interface-wrapper/</link><pubDate>Sun, 24 Mar 2019 10:03:39 +0100</pubDate><guid>https://galaiko.rocks/posts/blog/interface-wrapper/</guid><description>Let&amp;rsquo;s take this interface as an example:
type Block interface { Chain(Block) (string, error) } I want to make sure that input Block is always valid, and the output string is never empty if the error is nil. How can I do that? There are a couple of options.
The first option is to rely on every implementation to validate it, but it means a boilerplate code that is easy to miss.</description></item><item><title>Building a peer to peer messenger</title><link>https://galaiko.rocks/posts/blog/peer-to-peer/</link><pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/peer-to-peer/</guid><description>The idea of a peer to peer something is to create a system that doesn&amp;rsquo;t require any centralized server to operate. In the case of a messenger, two users should be able to communicate directly between each other until at least one of their instances is running.
That&amp;rsquo;s why the most important part of such systems is a discovery. If peers can&amp;rsquo;t find each other, it&amp;rsquo;s useless.
The first problem is to build a messenger app, that can discover the same apps in the network and securely communicate with each other.</description></item><item><title>Golang: Data races</title><link>https://galaiko.rocks/posts/blog/go-data-races/</link><pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/go-data-races/</guid><description>I have noticed that many people who have started using go have troubles when it comes to concurrent programming. Concurrency in go is indeed the most complicated part of the language, especially for people who don&amp;rsquo;t have much experience working with it. There are no compile time validations to prevent a programmer from creating race conditions, but go provides all the needed tools and instruments to avoid it.
I will try to explain what is a race condition, why does it happen and how to avoid it.</description></item><item><title>Optimizing a function</title><link>https://galaiko.rocks/posts/blog/optimizing-functions/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/optimizing-functions/</guid><description>In the golang community slack, someone shared a link to a package used to validate Swedish personnumer. Personnumer is a swedish version of an ID, and its format is well defined:
First 6 or 8 digits is a birthrate with or without a century. Last four digits are random secret digits. The whole number satisfies the Luhn algorithm. Birthdate and secret digits can be divided with - or +. For example 19900101-0017</description></item><item><title>Selfhosted RaspberryPI based Docker Swarm Cluster</title><link>https://galaiko.rocks/posts/blog/cluster/</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/cluster/</guid><description>Introduction I am renting virtual servers for a long time now to host different personal projects, including this website. I tried all of them: AWS, Google Cloud, DigitalOcean , Azure, and I was entirely satisfied with them until two weeks ago. Two weeks ago I came across the [article](https://medium.com/@bossjones/how-i-setup-a-raspberry -pi-3-cluster-using-the-new-docker-swarm-mode-in-29-minutes-aa0e4f3b1768) where the guy described how easy is to set up a RaspberryPI cluster powered by Docker Swarm. This idea seemed exciting to me, so I ordered all the equipment and spent some time to set it up and move most of the services from DigitalOcean servers to my living room.</description></item><item><title>Daily Coding Problem #23</title><link>https://galaiko.rocks/posts/dcp/maze/</link><pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/maze/</guid><description>Problem You are given an M by N matrix consisting of booleans that represents a board. Each True boolean represents a wall. Each False boolean represents a tile you can walk on.
Given this matrix, a start coordinate, and an end coordinate, return the minimum number of steps required to reach the end coordinate from the start. If there is no possible path, then return null. You can move up, left, down, and right.</description></item><item><title>Internet privacy starter pack</title><link>https://galaiko.rocks/posts/blog/privacy/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/privacy/</guid><description>About a month ago I began using some systems to protect my security on the internet a bit more than nothing.
PiHole It started when someone shared a link to the PiHole on Twitter. It is a self-hosted DNS service that is designed for RaspberryPi for blocking advertisements and trackers on the DNS level.
Turns out, about 20% of queries I make are blocked, and it doesn&amp;rsquo;t hurt daily usage at all.</description></item><item><title>Docker compose for managing personal server</title><link>https://galaiko.rocks/posts/blog/docker-compose-server-manegement/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/docker-compose-server-manegement/</guid><description>For a long time, I tried to find the most comfortable way to manage a server where I host something for myself, some kind of DevOps framework. And I think I found the best way so far.
Since most of the times things I want to host are useless and I often change my mind, there are several requirements for it:
Easy to add/remove new components.
Let&amp;rsquo;s say I created a website, and a couple of days later I added a DNS server on the same host, and then I went to Russia, so I also need to host VPN.</description></item><item><title>Half a year with vim</title><link>https://galaiko.rocks/posts/blog/half-a-year-with-vim/</link><pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/blog/half-a-year-with-vim/</guid><description>I started using vim because I was bored. Likely, I code in go, so it’s pretty easy to switch. I mean, I tried to do Java with vim for about a week - and it’s a hell. So if your primary language requires massive IDE support, it’s not an option to completely switch to vim.
After slightly more than half a year of usage, I improved typing, navigation speed, and general comfort while I code.</description></item><item><title>Daily Coding Problem #15</title><link>https://galaiko.rocks/posts/dcp/probability/inde/</link><pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/probability/inde/</guid><description>Today problem is a probability problem.
Problem This problem was asked by Facebook.
Given a stream of elements too large to store in memory, pick a random element from the stream with uniform probability.
Solution There are many variations of such problems, and before solving it, I want to show some basic examples that I met.
Most trivial one is picking one random element from an array.
Every programming language has a function to generate a pseudo-random number (int or float) within the given range.</description></item><item><title>Daily Coding Problem: Boring</title><link>https://galaiko.rocks/posts/dcp/boring/</link><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/boring/</guid><description>Problem Hardest problem to solve so far: describing 30min trivial problems turned out to be much less fun than I imagined.
Problem #8: binary tree (fun, but always same) Problem #9: array operations (boring and always same) Problem #10: go basics (3 lines wtf) Problem #11: a search tree Problem #12: recursive algorithm (always same, sometimes hard to detect) Problem #13: string operations (super lame) I will keep updating GitHub, but not sure about the website.</description></item><item><title>Daily Coding Problem: Problem #7</title><link>https://galaiko.rocks/posts/dcp/problem-7/</link><pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-7/</guid><description>Problem This problem was asked by Facebook.
Given the mapping a = 1, b = 2, &amp;hellip; z = 26, and an encoded message, count the number of ways it can be decoded.
For example, the message &amp;lsquo;111&amp;rsquo; would give 3, since it could be decoded as &amp;lsquo;aaa&amp;rsquo;, &amp;lsquo;ka&amp;rsquo;, and &amp;lsquo;ak&amp;rsquo;.
You can assume that the messages are decodable. For example, &amp;lsquo;001&amp;rsquo; is not allowed.
Solution Firstly, let&amp;rsquo;s take care of a mapping.</description></item><item><title>Daily Coding Problem: Problem #5</title><link>https://galaiko.rocks/posts/dcp/problem-5/</link><pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-5/</guid><description>Problem This problem was asked by Jane Street.
cons(a, b) constructs a pair, and car(pair) and cdr(pair) returns the first and last element of that pair. For example, car(cons(3, 4)) returns 3, and cdr(cons(3, 4)) returns 4.
Given this implementation of cons:
def cons(a, b): def pair(f): return f(a, b) return pair Implement car and cdr.
Solution The main difficulty with functional programming when you are used to object-oriented is that you don&amp;rsquo;t have clear names for things that are happening (try to explain to anyone what monad is).</description></item><item><title>Daily Coding Problem: Problem #4</title><link>https://galaiko.rocks/posts/dcp/problem-4/</link><pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-4/</guid><description>Problem This problem was asked by Stripe.
Given an array of integers, find the first missing positive integer in linear time and constant space. In other words, find the lowest positive integer that does not exist in the array. The array can contain duplicates and negative numbers as well.
For example, the input [3, 4, -1, 1] should give 2. The input [1, 2, 0] should give 3.
You can modify the input array in-place.</description></item><item><title>Daily Coding Problem: Problem #3</title><link>https://galaiko.rocks/posts/dcp/problem-3/</link><pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-3/</guid><description>Problem This problem was asked by Google.
Given the root to a binary tree, implement serialize(root), which serializes the tree into a string, and deserialize(s), which deserializes the string back into the tree.
For example, given the following Node class
class Node: def init(self, val, left=None, right=None): self.val = val self.left = left self.right = right The following test should pass:
node = Node(&amp;lsquo;root&amp;rsquo;, Node(&amp;lsquo;left&amp;rsquo;, Node(&amp;lsquo;left.left&amp;rsquo;)), Node(&amp;lsquo;right&amp;rsquo;)) assert deserialize(serialize(node)).left.left.val == &amp;lsquo;left.</description></item><item><title>Daily Coding Problem: Problem #2</title><link>https://galaiko.rocks/posts/dcp/problem-2/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-2/</guid><description>Problem This problem was asked by Uber.
Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.
For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6].</description></item><item><title>Daily Coding Problem: Problem #1</title><link>https://galaiko.rocks/posts/dcp/problem-1/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/problem-1/</guid><description>Problem This problem was recently asked by Google.
Given a list of numbers and a number k, return whether any two numbers from the list add up to k.
For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
Bonus: Can you do this in one pass?
Solution If we want to find the sum of every combination of two array elements most obvious way is to create two for loops over an array and check if they satisfy our condition.</description></item><item><title>Daily Coding Problem</title><link>https://galaiko.rocks/posts/dcp/intro/</link><pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate><guid>https://galaiko.rocks/posts/dcp/intro/</guid><description>Recently found this website Daily Coding Problem, where you can subscribe to a newsletter and get one problem a day.
For a long time, I wanted to start solving problems from leetcode to keep fit, but could never begin.
Also, for a long time, I wanted to start a blog, but could never begin.
Writing short articles about how I solve thus problems seems for me as an excellent opportunity to start doing both, so every day I will publish my solution for the daily problem here, and to my GitHub page trying to explain why and how I solved it.</description></item></channel></rss>